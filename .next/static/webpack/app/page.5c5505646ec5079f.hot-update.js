"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MusicPlayerApp; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/home.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/search.js\");\n/* harmony import */ var _barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! __barrel_optimize__?names=Home,Search,Settings!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/settings.js\");\n/* harmony import */ var _components_HomePage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/HomePage */ \"(app-pages-browser)/./components/HomePage.tsx\");\n/* harmony import */ var _components_SearchPage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/SearchPage */ \"(app-pages-browser)/./components/SearchPage.tsx\");\n/* harmony import */ var _components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/SettingsPage */ \"(app-pages-browser)/./components/SettingsPage.tsx\");\n/* harmony import */ var _components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/PlaylistsPage */ \"(app-pages-browser)/./components/PlaylistsPage.tsx\");\n/* harmony import */ var _components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/components/LikedSongsPage */ \"(app-pages-browser)/./components/LikedSongsPage.tsx\");\n/* harmony import */ var _components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @/components/MinimizedPlayer */ \"(app-pages-browser)/./components/MinimizedPlayer.tsx\");\n/* harmony import */ var _components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @/components/MaximizedPlayer */ \"(app-pages-browser)/./components/MaximizedPlayer.tsx\");\n/* harmony import */ var _components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @/components/CreatePlaylistModal */ \"(app-pages-browser)/./components/CreatePlaylistModal.tsx\");\n/* harmony import */ var _components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @/components/AddToPlaylistModal */ \"(app-pages-browser)/./components/AddToPlaylistModal.tsx\");\n/* harmony import */ var _components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @/components/AuthWrapper */ \"(app-pages-browser)/./components/AuthWrapper.tsx\");\n/* harmony import */ var _hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @/hooks/useAuth */ \"(app-pages-browser)/./hooks/useAuth.ts\");\n/* harmony import */ var _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @/hooks/useSupabaseData */ \"(app-pages-browser)/./hooks/useSupabaseData.ts\");\n/* harmony import */ var _hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @/hooks/useQueue */ \"(app-pages-browser)/./hooks/useQueue.ts\");\n/* harmony import */ var _components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @/components/ThemeContext */ \"(app-pages-browser)/./components/ThemeContext.tsx\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction MusicPlayerContent() {\n    _s();\n    const { user } = (0,_hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__.useAuth)();\n    const { songs, playlists, likedSongs, lastPlayedSong, loading, toggleLike, createPlaylist, deletePlaylist, renamePlaylist, addSongToPlaylist, removeSongFromPlaylist, recordListeningHistory, stopCurrentSongTracking, getPersonalizedSongs } = (0,_hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__.useSupabaseData)(user);\n    const { queue, addToQueue, removeFromQueue, getNextSongFromQueue, clearQueue, hasQueue } = (0,_hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__.useQueue)();\n    const [activeTab, setActiveTab] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"home\");\n    const [currentPage, setCurrentPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"main\");\n    const [currentSong, setCurrentSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPlayerMaximized, setIsPlayerMaximized] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showCreatePlaylistModal, setShowCreatePlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAddToPlaylistModal, setShowAddToPlaylistModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [selectedSongForPlaylist, setSelectedSongForPlaylist] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [hasSetLastPlayedSong, setHasSetLastPlayedSong] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [lastPlayedSongDismissed, setLastPlayedSongDismissed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { isDarkMode, toggleTheme } = (0,_components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__.useTheme)();\n    const [displayCount, setDisplayCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(15);\n    const [imageUrls, setImageUrls] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [audioUrl, setAudioUrl] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const audioRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [currentTime, setCurrentTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [duration, setDuration] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [volume, setVolume] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0.75); // default 75%\n    const [isSeeking, setIsSeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [pendingSeekTime, setPendingSeekTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isExternallySeeking, setIsExternallySeeking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [recommendedQueue, setRecommendedQueue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [playedSongs, setPlayedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [personalizedList, setPersonalizedList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentSongIndex, setCurrentSongIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [listenedSongs, setListenedSongs] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [isFetchingMore, setIsFetchingMore] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const loadMoreSongs = ()=>{\n        setDisplayCount((prev)=>prev + 15);\n    };\n    const displayedSongs = songs.slice(0, displayCount);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadAudio = async ()=>{\n            if (currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id) {\n                const url = \"/api/audio-proxy?fileid=\".concat(currentSong.file_id);\n                setAudioUrl(url);\n                setDuration(0);\n                setCurrentTime(0);\n                setPendingSeekTime(null);\n            }\n        };\n        loadAudio();\n    }, [\n        currentSong === null || currentSong === void 0 ? void 0 : currentSong.file_id\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (audioRef.current) {\n            audioRef.current.volume = volume;\n        }\n    }, [\n        volume\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        if (!isNaN(audio.duration) && isPlaying) {\n            // Duration is valid, safe to play\n            audio.play().catch((e)=>{\n                console.error(\"Playback error:\", e);\n            });\n        } else if (!isPlaying) {\n            audio.pause();\n        }\n    }, [\n        isPlaying\n    ]);\n    // Load images for currently displayed songs\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const fetchImages = async ()=>{\n            const newUrls = {};\n            // Songs from the main feed\n            const songsToLoad = songs.slice(0, displayCount);\n            for (const song of songsToLoad){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Songs from playlists\n            for (const playlist of playlists){\n                for (const song of playlist.songs){\n                    if (!imageUrls[song.id]) {\n                        newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                    }\n                }\n            }\n            // Liked songs\n            for (const song of likedSongs){\n                if (!imageUrls[song.id]) {\n                    newUrls[song.id] = \"/api/image-proxy?fileid=\".concat(song.img_id);\n                }\n            }\n            // Apply if new URLs found\n            if (Object.keys(newUrls).length > 0) {\n                setImageUrls((prev)=>({\n                        ...prev,\n                        ...newUrls\n                    }));\n            }\n        };\n        fetchImages();\n    }, [\n        displayCount,\n        songs,\n        playlists,\n        likedSongs\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"\\uD83C\\uDFB5 personalizedList updated:\", personalizedList);\n    }, [\n        personalizedList\n    ]);\n    // Set last played song as current song when data loads (only once and if not dismissed)\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const loadLastPlayedImage = async ()=>{\n            if (user && lastPlayedSong && !hasSetLastPlayedSong && !lastPlayedSongDismissed) {\n                try {\n                    console.log(\"\\uD83C\\uDFB5 Loading initial personalized songs for last played song\");\n                    const initialRecs = await getPersonalizedSongs(user.id, lastPlayedSong, listenedSongs);\n                    const filtered = initialRecs.filter((song)=>!playedSongs.has(song.file_id.toString()));\n                    const newPersonalizedList = [\n                        lastPlayedSong,\n                        ...filtered.slice(0, 4)\n                    ];\n                    setPersonalizedList(newPersonalizedList);\n                    console.log(\"✅ Initial personalized list set:\", newPersonalizedList.length, \"songs\");\n                } catch (error) {\n                    console.error(\"❌ Error loading initial personalized songs:\", error);\n                    setPersonalizedList([\n                        lastPlayedSong\n                    ]);\n                }\n                setCurrentSong(lastPlayedSong);\n                setHasSetLastPlayedSong(true);\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(lastPlayedSong.file_id.toString());\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                if (!imageUrls[lastPlayedSong.img_id]) {\n                    const url = \"/api/image-proxy?fileid=\".concat(lastPlayedSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [lastPlayedSong.img_id]: url\n                        }));\n                }\n            }\n        };\n        loadLastPlayedImage();\n    }, [\n        lastPlayedSong,\n        hasSetLastPlayedSong,\n        lastPlayedSongDismissed,\n        user,\n        getPersonalizedSongs\n    ]);\n    const handleSongPlay = async (song)=>{\n        setCurrentSong(song);\n        setIsPlaying(true);\n        setLastPlayedSongDismissed(false);\n        recordListeningHistory(song.id);\n        // Add to listened songs and log\n        setListenedSongs((prev)=>{\n            const newSet = new Set(prev);\n            newSet.add(song.file_id.toString());\n            console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n            return newSet;\n        });\n        setPlayedSongs((prev)=>{\n            const updated1 = new Set(prev);\n            updated1.add(song.file_id.toString());\n            return updated1;\n        });\n        if (user) {\n            try {\n                console.log(\"\\uD83C\\uDFB5 Fetching personalized songs for:\", song.name);\n                const recs = await getPersonalizedSongs(user.id, song, listenedSongs);\n                const filtered = recs.filter((s)=>!playedSongs.has(s.file_id.toString()));\n                const newPersonalizedList = [\n                    song,\n                    ...filtered.slice(0, 4)\n                ];\n                setPersonalizedList(newPersonalizedList);\n                setCurrentSongIndex(0);\n                console.log(\"✅ New personalized list set:\", newPersonalizedList.length, \"songs\");\n            } catch (error) {\n                console.error(\"❌ Error fetching personalized songs:\", error);\n                setPersonalizedList([\n                    song\n                ]);\n                setCurrentSongIndex(0);\n            }\n        }\n    };\n    const handleAddToQueue = (song)=>{\n        addToQueue(song);\n        react_hot_toast__WEBPACK_IMPORTED_MODULE_16__.toast.success('Added \"'.concat(song.name, '\" to queue'));\n    };\n    const togglePlay = ()=>{\n        setIsPlaying(!isPlaying);\n    };\n    const togglePlayerSize = ()=>{\n        setIsPlayerMaximized(!isPlayerMaximized);\n    };\n    const closePlayer = async ()=>{\n        // Stop tracking current song before closing\n        await stopCurrentSongTracking();\n        setCurrentSong(null);\n        setIsPlaying(false);\n        setIsPlayerMaximized(false);\n        // Mark last played song as dismissed so it won't auto-load again\n        setLastPlayedSongDismissed(true);\n    };\n    const handleToggleLike = (songId)=>{\n        toggleLike(songId);\n        // Update current song state if it's the one being liked/unliked\n        if (currentSong && currentSong.id === songId) {\n            setCurrentSong((prev)=>prev ? {\n                    ...prev,\n                    isLiked: !prev.isLiked\n                } : null);\n        }\n    };\n    const handlePrevious = ()=>{\n        if (!currentSong) return;\n        // Check if there's a previous song in the personalized list\n        if (currentSongIndex > 0) {\n            const prevIndex = currentSongIndex - 1;\n            const prevSong = personalizedList[prevIndex];\n            if (prevSong) {\n                setCurrentSong(prevSong);\n                setCurrentSongIndex(prevIndex);\n                setIsPlaying(true);\n                setLastPlayedSongDismissed(false);\n                recordListeningHistory(prevSong.id);\n                // Add to listened songs and log\n                setListenedSongs((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.add(prevSong.file_id.toString());\n                    console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                    return newSet;\n                });\n                setPlayedSongs((prev)=>{\n                    const updated1 = new Set(prev);\n                    updated1.add(nextSong.file_id.toString());\n                    return updated1;\n                });\n                // Preload image\n                if (!imageUrls[prevSong.img_id]) {\n                    const newUrl = \"/api/image-proxy?fileid=\".concat(prevSong.img_id);\n                    setImageUrls((prev)=>({\n                            ...prev,\n                            [prevSong.img_id]: newUrl\n                        }));\n                }\n            }\n        } else {\n            // If at the beginning, just restart current song\n            setCurrentTime(0);\n            setIsPlaying(true);\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentSong) return;\n        const currentIndex = songs.findIndex((song)=>song.id === currentSong.id);\n        const nextIndex = currentIndex < songs.length - 1 ? currentIndex + 1 : 0;\n        const nextSong1 = songs[nextIndex];\n        // Preload next song image if not in cache\n        if (nextSong1 && !imageUrls[nextSong1.img_id]) {\n            const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong1.img_id);\n            setImageUrls((prev)=>({\n                    ...prev,\n                    [nextSong1.img_id]: newUrl\n                }));\n        }\n    }, [\n        currentSong,\n        songs\n    ]);\n    const handleLoadedMetadata = async ()=>{\n        const audio = audioRef.current;\n        if (!audio) return;\n        const loadedDuration = audio.duration;\n        if (!isNaN(loadedDuration) && isFinite(loadedDuration)) {\n            setDuration(loadedDuration);\n            if (pendingSeekTime !== null) {\n                audio.currentTime = pendingSeekTime;\n                setCurrentTime(pendingSeekTime);\n                setPendingSeekTime(null);\n            } else {\n                setCurrentTime(audio.currentTime);\n            }\n            try {\n                if (isPlaying) {\n                    await audio.play();\n                }\n            } catch (err) {\n                console.error(\"Auto-play error after metadata load:\", err);\n            }\n        } else {\n            // Retry metadata read\n            setTimeout(handleLoadedMetadata, 100);\n        }\n    };\n    const handleNext = async ()=>{\n        if (!currentSong) return;\n        // Check if there's a song in the queue first\n        const nextQueueSong = getNextSongFromQueue();\n        if (nextQueueSong) {\n            setCurrentSong(nextQueueSong);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextQueueSong.id);\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextQueueSong.file_id.toString());\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            // Update personalized list with the queue song\n            if (user) {\n                const recs = await getPersonalizedSongs(user.id, nextQueueSong, listenedSongs);\n                const filtered = recs.filter((s)=>!playedSongs.has(s.file_id));\n                const newPersonalizedList = [\n                    nextQueueSong,\n                    ...filtered.slice(0, 4)\n                ];\n                setPersonalizedList(newPersonalizedList);\n                setCurrentSongIndex(0);\n            }\n            // Preload image\n            if (!imageUrls[nextQueueSong.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextQueueSong.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextQueueSong.img_id]: newUrl\n                    }));\n            }\n            return;\n        }\n        // Check if we're at the second-to-last song and need to fetch more\n        if (currentSongIndex === personalizedList.length - 2 && !isFetchingMore && user && currentSong) {\n            console.log(\"\\uD83D\\uDD04 Fetching more songs at second-to-last position...\");\n            setIsFetchingMore(true);\n            try {\n                const newRecs = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id.toString()) && !listenedSongs.has(song.file_id.toString()) && !personalizedList.some((existing)=>existing.file_id === song.file_id));\n                if (filtered.length > 0) {\n                    setPersonalizedList((prev)=>[\n                            ...prev,\n                            ...filtered.slice(0, 5)\n                        ]);\n                    console.log(\"✅ Added\", filtered.slice(0, 5).length, \"more songs to personalized list\");\n                }\n            } catch (error) {\n                console.error(\"❌ Error fetching more songs:\", error);\n            } finally{\n                setIsFetchingMore(false);\n            }\n        }\n        // If no queue, proceed with personalized list\n        const nextIndex = currentSongIndex + 1;\n        if (nextIndex < personalizedList.length) {\n            const nextSong1 = personalizedList[nextIndex];\n            setCurrentSong(nextSong1);\n            setCurrentSongIndex(nextIndex);\n            setIsPlaying(true);\n            setLastPlayedSongDismissed(false);\n            recordListeningHistory(nextSong1.id);\n            // Add to listened songs and log\n            setListenedSongs((prev)=>{\n                const newSet = new Set(prev);\n                newSet.add(nextSong1.file_id.toString());\n                console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                return newSet;\n            });\n            setPlayedSongs((prev)=>{\n                const updated1 = new Set(prev);\n                updated1.add(String(nextSong1.file_id));\n                return updated1;\n            });\n            // Preload image\n            if (!imageUrls[nextSong1.img_id]) {\n                const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong1.img_id);\n                setImageUrls((prev)=>({\n                        ...prev,\n                        [nextSong1.img_id]: newUrl\n                    }));\n            }\n        } else {\n            // If we've reached the end of personalized list, get new recommendations\n            if (user && currentSong) {\n                try {\n                    console.log(\"\\uD83D\\uDD04 Fetching new recommendations at end of list\");\n                    const newRecs = await getPersonalizedSongs(user.id, currentSong, listenedSongs);\n                    const filtered = newRecs.filter((song)=>!playedSongs.has(song.file_id.toString()) && !listenedSongs.has(song.file_id.toString()));\n                    if (filtered.length > 0) {\n                        const nextSong1 = filtered[0];\n                        updated.add(nextSong1.file_id.toString());\n                        setIsPlaying(true);\n                        setLastPlayedSongDismissed(false);\n                        recordListeningHistory(nextSong1.id);\n                        // Add to listened songs and log\n                        setListenedSongs((prev)=>{\n                            const newSet = new Set(prev);\n                            newSet.add(nextSong1.file_id.toString());\n                            console.log(\"\\uD83C\\uDFB5 Listened Songs List:\", Array.from(newSet));\n                            return newSet;\n                        });\n                        // Create new personalized list starting with this song\n                        const newPersonalizedList = [\n                            nextSong1,\n                            ...filtered.slice(1, 5)\n                        ];\n                        setPersonalizedList(newPersonalizedList);\n                        setCurrentSongIndex(0);\n                        setPlayedSongs((prev)=>{\n                            const updated1 = new Set(prev);\n                            updated1.add(nextSong1.file_id.toString());\n                            return updated1;\n                        });\n                        // Preload image\n                        if (!imageUrls[nextSong1.img_id]) {\n                            const newUrl = \"/api/image-proxy?fileid=\".concat(nextSong1.img_id);\n                            setImageUrls((prev)=>({\n                                    ...prev,\n                                    [nextSong1.img_id]: newUrl\n                                }));\n                        }\n                        console.log(\"✅ New recommendations loaded:\", newPersonalizedList.length, \"songs\");\n                    } else {\n                        console.warn(\"⚠️ No more recommendations available\");\n                    }\n                } catch (error) {\n                    console.error(\"❌ Error fetching new recommendations:\", error);\n                }\n            }\n        }\n    };\n    const formatNumber = (num)=>{\n        if (num >= 1000000) {\n            return (num / 1000000).toFixed(1) + \"M\";\n        } else if (num >= 1000) {\n            return (num / 1000).toFixed(1) + \"K\";\n        }\n        return num.toString();\n    };\n    const handleAddToPlaylist = (song)=>{\n        setSelectedSongForPlaylist(song);\n        setShowAddToPlaylistModal(true);\n    };\n    const handleSongEnd = async ()=>{\n        // When a song ends, automatically play the next one\n        await handleNext();\n    };\n    const renderContent = ()=>{\n        if (currentPage === \"playlists\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_PlaylistsPage__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                playlists: playlists,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                onCreatePlaylist: ()=>setShowCreatePlaylistModal(true),\n                onDeletePlaylist: deletePlaylist,\n                onRenamePlaylist: renamePlaylist,\n                onRemoveSongFromPlaylist: removeSongFromPlaylist,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 536,\n                columnNumber: 9\n            }, this);\n        }\n        if (currentPage === \"liked\") {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_LikedSongsPage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                songs: likedSongs,\n                onBack: ()=>setCurrentPage(\"main\"),\n                onSongPlay: handleSongPlay,\n                onAddToQueue: handleAddToQueue,\n                imageUrls: imageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 551,\n                columnNumber: 14\n            }, this);\n        }\n        switch(activeTab){\n            case \"home\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 556,\n                    columnNumber: 16\n                }, this);\n            case \"search\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SearchPage__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    songs: songs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    setImageUrls: setImageUrls\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 567,\n                    columnNumber: 16\n                }, this);\n            case \"settings\":\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_SettingsPage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    onPlaylistsClick: ()=>setCurrentPage(\"playlists\"),\n                    onLikedClick: ()=>setCurrentPage(\"liked\")\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 577,\n                    columnNumber: 16\n                }, this);\n            default:\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_HomePage__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    songs: displayedSongs,\n                    onSongPlay: handleSongPlay,\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: handleAddToPlaylist,\n                    onAddToQueue: handleAddToQueue,\n                    imageUrls: imageUrls,\n                    onLoadMore: loadMoreSongs,\n                    hasMoreSongs: displayCount < songs.length\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 579,\n                    columnNumber: 16\n                }, this);\n        }\n    };\n    const themeClasses = isDarkMode ? \"bg-gray-900 text-white\" : \"bg-gray-50 text-gray-900\";\n    const setCurrentTimeState = setCurrentTime;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"min-h-screen \".concat(themeClasses, \" relative overflow-hidden\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"transition-all duration-300 \".concat(currentSong ? \"pb-36\" : \"pb-20\"),\n                children: renderContent()\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 601,\n                columnNumber: 9\n            }, this),\n            currentPage === \"main\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"fixed bottom-0 left-0 right-0 \".concat(isDarkMode ? \"bg-gray-800 border-gray-700\" : \"bg-white border-gray-200\", \" border-t z-30\"),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center justify-around py-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"home\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"home\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 615,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Home\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 616,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 609,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"search\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"search\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 624,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Search\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 625,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 618,\n                            columnNumber: 15\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setActiveTab(\"settings\"),\n                            className: \"flex flex-col items-center space-y-1 p-2 transition-colors \".concat(activeTab === \"settings\" ? \"text-purple-400\" : isDarkMode ? \"text-gray-400\" : \"text-gray-600\"),\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Home_Search_Settings_lucide_react__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {\n                                    size: 24\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 633,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"text-xs\",\n                                    children: \"Settings\"\n                                }, void 0, false, {\n                                    fileName: \"/home/project/app/page.tsx\",\n                                    lineNumber: 634,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/project/app/page.tsx\",\n                            lineNumber: 627,\n                            columnNumber: 15\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 608,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 607,\n                columnNumber: 11\n            }, this),\n            currentSong && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: !isPlayerMaximized ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MinimizedPlayer__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMaximize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onClose: closePlayer,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    currentTime: currentTime,\n                    duration: duration\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 644,\n                    columnNumber: 15\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MaximizedPlayer__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    song: currentSong,\n                    isPlaying: isPlaying,\n                    imageUrl: imageUrls[currentSong.img_id],\n                    onTogglePlay: togglePlay,\n                    onMinimize: togglePlayerSize,\n                    onPrevious: handlePrevious,\n                    onNext: handleNext,\n                    onToggleLike: ()=>handleToggleLike(currentSong.id),\n                    formatNumber: formatNumber,\n                    onAddToPlaylist: ()=>handleAddToPlaylist(currentSong),\n                    currentTime: currentTime,\n                    duration: duration,\n                    setCurrentTime: (seekTime)=>{\n                        if (audioRef.current && !isNaN(audioRef.current.duration)) {\n                            setIsExternallySeeking(true);\n                            audioRef.current.currentTime = seekTime;\n                            setCurrentTimeState(seekTime);\n                            setTimeout(()=>setIsExternallySeeking(false), 200);\n                        } else {\n                            setPendingSeekTime(seekTime); // Will apply onLoadedMetadata\n                        }\n                    },\n                    volume: volume,\n                    setVolume: setVolume,\n                    isSeeking: isSeeking,\n                    setIsSeeking: setIsSeeking,\n                    queue: queue,\n                    onRemoveFromQueue: removeFromQueue,\n                    onSongPlay: handleSongPlay,\n                    imageUrls: imageUrls\n                }, void 0, false, {\n                    fileName: \"/home/project/app/page.tsx\",\n                    lineNumber: 659,\n                    columnNumber: 15\n                }, this)\n            }, void 0, false),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_CreatePlaylistModal__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                isOpen: showCreatePlaylistModal,\n                onClose: ()=>setShowCreatePlaylistModal(false),\n                onCreatePlaylist: createPlaylist\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 700,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AddToPlaylistModal__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                isOpen: showAddToPlaylistModal,\n                onClose: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setSelectedSongForPlaylist(null);\n                },\n                song: selectedSongForPlaylist,\n                playlists: playlists,\n                onAddToPlaylist: addSongToPlaylist,\n                onCreatePlaylist: ()=>{\n                    setShowAddToPlaylistModal(false);\n                    setShowCreatePlaylistModal(true);\n                },\n                imageUrls: imageUrls,\n                setImageUrls: setImageUrls\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 706,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                ref: audioRef,\n                src: audioUrl !== null && audioUrl !== void 0 ? audioUrl : undefined,\n                onEnded: handleSongEnd,\n                onTimeUpdate: ()=>{\n                    if (audioRef.current && !isSeeking && !isExternallySeeking) {\n                        const current = audioRef.current.currentTime;\n                        // Only update state if the difference is significant\n                        if (Math.abs(currentTime - current) > 0.25) {\n                            setCurrentTime(current);\n                        }\n                    }\n                },\n                onLoadedMetadata: handleLoadedMetadata,\n                onVolumeChange: ()=>{\n                    if (audioRef.current) {\n                        setVolume(audioRef.current.volume);\n                    }\n                },\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 722,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 599,\n        columnNumber: 7\n    }, this);\n}\n_s(MusicPlayerContent, \"bb+0ASQW6A40VcVdyGWqIhA+lXA=\", false, function() {\n    return [\n        _hooks_useAuth__WEBPACK_IMPORTED_MODULE_12__.useAuth,\n        _hooks_useSupabaseData__WEBPACK_IMPORTED_MODULE_13__.useSupabaseData,\n        _hooks_useQueue__WEBPACK_IMPORTED_MODULE_14__.useQueue,\n        _components_ThemeContext__WEBPACK_IMPORTED_MODULE_15__.useTheme\n    ];\n});\n_c = MusicPlayerContent;\nfunction MusicPlayerApp() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_AuthWrapper__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_16__.Toaster, {\n                position: \"bottom-center\"\n            }, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 753,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MusicPlayerContent, {}, void 0, false, {\n                fileName: \"/home/project/app/page.tsx\",\n                lineNumber: 754,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/project/app/page.tsx\",\n        lineNumber: 752,\n        columnNumber: 5\n    }, this);\n}\n_c1 = MusicPlayerApp;\nvar _c, _c1;\n$RefreshReg$(_c, \"MusicPlayerContent\");\n$RefreshReg$(_c1, \"MusicPlayerApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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bnQiOlsiJ3VzZSBjbGllbnQnXG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlRWZmZWN0LHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEhvbWUgYXMgSG9tZUljb24sIFNlYXJjaCwgU2V0dGluZ3MgfSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuaW1wb3J0IEhvbWVQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9Ib21lUGFnZSc7XG5pbXBvcnQgU2VhcmNoUGFnZSBmcm9tICdAL2NvbXBvbmVudHMvU2VhcmNoUGFnZSc7XG5pbXBvcnQgU2V0dGluZ3NQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9TZXR0aW5nc1BhZ2UnO1xuaW1wb3J0IFBsYXlsaXN0c1BhZ2UgZnJvbSAnQC9jb21wb25lbnRzL1BsYXlsaXN0c1BhZ2UnO1xuaW1wb3J0IExpa2VkU29uZ3NQYWdlIGZyb20gJ0AvY29tcG9uZW50cy9MaWtlZFNvbmdzUGFnZSc7XG5pbXBvcnQgTWluaW1pemVkUGxheWVyIGZyb20gJ0AvY29tcG9uZW50cy9NaW5pbWl6ZWRQbGF5ZXInO1xuaW1wb3J0IE1heGltaXplZFBsYXllciBmcm9tICdAL2NvbXBvbmVudHMvTWF4aW1pemVkUGxheWVyJztcbmltcG9ydCBDcmVhdGVQbGF5bGlzdE1vZGFsIGZyb20gJ0AvY29tcG9uZW50cy9DcmVhdGVQbGF5bGlzdE1vZGFsJztcbmltcG9ydCBBZGRUb1BsYXlsaXN0TW9kYWwgZnJvbSAnQC9jb21wb25lbnRzL0FkZFRvUGxheWxpc3RNb2RhbCc7XG5pbXBvcnQgQXV0aFdyYXBwZXIgZnJvbSAnQC9jb21wb25lbnRzL0F1dGhXcmFwcGVyJztcbmltcG9ydCB7IHVzZUF1dGggfSBmcm9tICdAL2hvb2tzL3VzZUF1dGgnO1xuaW1wb3J0IHsgdXNlU3VwYWJhc2VEYXRhIH0gZnJvbSAnQC9ob29rcy91c2VTdXBhYmFzZURhdGEnO1xuaW1wb3J0IHsgdXNlUXVldWUgfSBmcm9tICdAL2hvb2tzL3VzZVF1ZXVlJztcbmltcG9ydCB7IFNvbmcgfSBmcm9tICdAL3R5cGVzJztcbmltcG9ydCB7IHVzZVRoZW1lIH0gZnJvbSAnQC9jb21wb25lbnRzL1RoZW1lQ29udGV4dCc7XG5pbXBvcnQge1RvYXN0ZXIsdG9hc3R9IGZyb20gJ3JlYWN0LWhvdC10b2FzdCc7XG5cblxuZnVuY3Rpb24gTXVzaWNQbGF5ZXJDb250ZW50KCkge1xuICBjb25zdCB7IHVzZXIgfSA9IHVzZUF1dGgoKTtcbiAgY29uc3Qge1xuICAgIHNvbmdzLFxuICAgIHBsYXlsaXN0cyxcbiAgICBsaWtlZFNvbmdzLFxuICAgIGxhc3RQbGF5ZWRTb25nLFxuICAgIGxvYWRpbmcsXG4gICAgdG9nZ2xlTGlrZSxcbiAgICBjcmVhdGVQbGF5bGlzdCxcbiAgICBkZWxldGVQbGF5bGlzdCxcbiAgICByZW5hbWVQbGF5bGlzdCxcbiAgICBhZGRTb25nVG9QbGF5bGlzdCxcbiAgICByZW1vdmVTb25nRnJvbVBsYXlsaXN0LFxuICAgIHJlY29yZExpc3RlbmluZ0hpc3RvcnksXG4gICAgc3RvcEN1cnJlbnRTb25nVHJhY2tpbmcsXG4gICAgZ2V0UGVyc29uYWxpemVkU29uZ3NcbiAgfSA9IHVzZVN1cGFiYXNlRGF0YSh1c2VyKTtcbiAgXG4gIGNvbnN0IHtcbiAgICBxdWV1ZSxcbiAgICBhZGRUb1F1ZXVlLFxuICAgIHJlbW92ZUZyb21RdWV1ZSxcbiAgICBnZXROZXh0U29uZ0Zyb21RdWV1ZSxcbiAgICBjbGVhclF1ZXVlLFxuICAgIGhhc1F1ZXVlXG4gIH0gPSB1c2VRdWV1ZSgpO1xuXG4gIGNvbnN0IFthY3RpdmVUYWIsIHNldEFjdGl2ZVRhYl0gPSB1c2VTdGF0ZTwnaG9tZScgfCAnc2VhcmNoJyB8ICdzZXR0aW5ncyc+KCdob21lJyk7XG4gIGNvbnN0IFtjdXJyZW50UGFnZSwgc2V0Q3VycmVudFBhZ2VdID0gdXNlU3RhdGU8J21haW4nIHwgJ3BsYXlsaXN0cycgfCAnbGlrZWQnPignbWFpbicpO1xuICBjb25zdCBbY3VycmVudFNvbmcsIHNldEN1cnJlbnRTb25nXSA9IHVzZVN0YXRlPFNvbmcgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2lzUGxheWluZywgc2V0SXNQbGF5aW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2lzUGxheWVyTWF4aW1pemVkLCBzZXRJc1BsYXllck1heGltaXplZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzaG93Q3JlYXRlUGxheWxpc3RNb2RhbCwgc2V0U2hvd0NyZWF0ZVBsYXlsaXN0TW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd0FkZFRvUGxheWxpc3RNb2RhbCwgc2V0U2hvd0FkZFRvUGxheWxpc3RNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZWxlY3RlZFNvbmdGb3JQbGF5bGlzdCwgc2V0U2VsZWN0ZWRTb25nRm9yUGxheWxpc3RdID0gdXNlU3RhdGU8U29uZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaGFzU2V0TGFzdFBsYXllZFNvbmcsIHNldEhhc1NldExhc3RQbGF5ZWRTb25nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2xhc3RQbGF5ZWRTb25nRGlzbWlzc2VkLCBzZXRMYXN0UGxheWVkU29uZ0Rpc21pc3NlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IHsgaXNEYXJrTW9kZSwgdG9nZ2xlVGhlbWUgfSA9IHVzZVRoZW1lKCk7XG4gIGNvbnN0IFtkaXNwbGF5Q291bnQsIHNldERpc3BsYXlDb3VudF0gPSB1c2VTdGF0ZSgxNSk7XG4gIGNvbnN0IFtpbWFnZVVybHMsIHNldEltYWdlVXJsc10gPSB1c2VTdGF0ZTxSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+Pih7fSk7XG4gIGNvbnN0IFthdWRpb1VybCwgc2V0QXVkaW9VcmxdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IGF1ZGlvUmVmID0gdXNlUmVmPEhUTUxBdWRpb0VsZW1lbnQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2N1cnJlbnRUaW1lLCBzZXRDdXJyZW50VGltZV0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2R1cmF0aW9uLCBzZXREdXJhdGlvbl0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW3ZvbHVtZSwgc2V0Vm9sdW1lXSA9IHVzZVN0YXRlKDAuNzUpOyAvLyBkZWZhdWx0IDc1JVxuICBjb25zdCBbaXNTZWVraW5nLCBzZXRJc1NlZWtpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbcGVuZGluZ1NlZWtUaW1lLCBzZXRQZW5kaW5nU2Vla1RpbWVdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtpc0V4dGVybmFsbHlTZWVraW5nLCBzZXRJc0V4dGVybmFsbHlTZWVraW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3JlY29tbWVuZGVkUXVldWUsIHNldFJlY29tbWVuZGVkUXVldWVdID0gdXNlU3RhdGU8U29uZ1tdPihbXSlcbiAgY29uc3QgW3BsYXllZFNvbmdzLCBzZXRQbGF5ZWRTb25nc10gPSB1c2VTdGF0ZTxTZXQ8c3RyaW5nPj4obmV3IFNldCgpKSAgXG4gIGNvbnN0IFtwZXJzb25hbGl6ZWRMaXN0LCBzZXRQZXJzb25hbGl6ZWRMaXN0XSA9IHVzZVN0YXRlPFNvbmdbXT4oW10pO1xuICBjb25zdCBbY3VycmVudFNvbmdJbmRleCwgc2V0Q3VycmVudFNvbmdJbmRleF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbbGlzdGVuZWRTb25ncywgc2V0TGlzdGVuZWRTb25nc10gPSB1c2VTdGF0ZTxTZXQ8c3RyaW5nPj4obmV3IFNldCgpKTtcbiAgY29uc3QgW2lzRmV0Y2hpbmdNb3JlLCBzZXRJc0ZldGNoaW5nTW9yZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIFxuY29uc3QgbG9hZE1vcmVTb25ncyA9ICgpID0+IHtcbiAgc2V0RGlzcGxheUNvdW50KHByZXYgPT4gcHJldiArIDE1KTtcbn07XG5cbmNvbnN0IGRpc3BsYXllZFNvbmdzID0gc29uZ3Muc2xpY2UoMCwgZGlzcGxheUNvdW50KTtcbnVzZUVmZmVjdCgoKSA9PiB7XG4gIGNvbnN0IGxvYWRBdWRpbyA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoY3VycmVudFNvbmc/LmZpbGVfaWQpIHtcbiAgICAgIGNvbnN0IHVybCA9IGAvYXBpL2F1ZGlvLXByb3h5P2ZpbGVpZD0ke2N1cnJlbnRTb25nLmZpbGVfaWR9YDtcbiAgICAgIHNldEF1ZGlvVXJsKHVybCk7XG5cbiAgICAgIHNldER1cmF0aW9uKDApO1xuICAgICAgc2V0Q3VycmVudFRpbWUoMCk7XG4gICAgICBzZXRQZW5kaW5nU2Vla1RpbWUobnVsbCk7XG4gICAgfVxuICB9O1xuXG4gIGxvYWRBdWRpbygpO1xufSwgW2N1cnJlbnRTb25nPy5maWxlX2lkXSk7XG5cbnVzZUVmZmVjdCgoKSA9PiB7XG4gIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgYXVkaW9SZWYuY3VycmVudC52b2x1bWUgPSB2b2x1bWU7XG4gIH1cbn0sIFt2b2x1bWVdKTtcblxudXNlRWZmZWN0KCgpID0+IHtcbiAgY29uc3QgYXVkaW8gPSBhdWRpb1JlZi5jdXJyZW50O1xuICBpZiAoIWF1ZGlvKSByZXR1cm47XG5cbiAgaWYgKCFpc05hTihhdWRpby5kdXJhdGlvbikgJiYgaXNQbGF5aW5nKSB7XG4gICAgLy8gRHVyYXRpb24gaXMgdmFsaWQsIHNhZmUgdG8gcGxheVxuICAgIGF1ZGlvLnBsYXkoKS5jYXRjaCgoZSkgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcignUGxheWJhY2sgZXJyb3I6JywgZSk7XG4gICAgfSk7XG4gIH0gZWxzZSBpZiAoIWlzUGxheWluZykge1xuICAgIGF1ZGlvLnBhdXNlKCk7XG4gIH1cbn0sIFtpc1BsYXlpbmddKTtcblxuXG5cblxuLy8gTG9hZCBpbWFnZXMgZm9yIGN1cnJlbnRseSBkaXNwbGF5ZWQgc29uZ3NcbnVzZUVmZmVjdCgoKSA9PiB7XG4gIGNvbnN0IGZldGNoSW1hZ2VzID0gYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IG5ld1VybHM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fTtcblxuICAgIC8vIFNvbmdzIGZyb20gdGhlIG1haW4gZmVlZFxuICAgIGNvbnN0IHNvbmdzVG9Mb2FkID0gc29uZ3Muc2xpY2UoMCwgZGlzcGxheUNvdW50KTtcbiAgICBmb3IgKGNvbnN0IHNvbmcgb2Ygc29uZ3NUb0xvYWQpIHtcbiAgICAgIGlmICghaW1hZ2VVcmxzW3NvbmcuaWRdKSB7XG4gICAgICAgIG5ld1VybHNbc29uZy5pZF0gPSBgL2FwaS9pbWFnZS1wcm94eT9maWxlaWQ9JHtzb25nLmltZ19pZH1gO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFNvbmdzIGZyb20gcGxheWxpc3RzXG4gICAgZm9yIChjb25zdCBwbGF5bGlzdCBvZiBwbGF5bGlzdHMpIHtcbiAgICAgIGZvciAoY29uc3Qgc29uZyBvZiBwbGF5bGlzdC5zb25ncykge1xuICAgICAgICBpZiAoIWltYWdlVXJsc1tzb25nLmlkXSkge1xuICAgICAgICAgIG5ld1VybHNbc29uZy5pZF0gPSBgL2FwaS9pbWFnZS1wcm94eT9maWxlaWQ9JHtzb25nLmltZ19pZH1gO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gTGlrZWQgc29uZ3NcbiAgICBmb3IgKGNvbnN0IHNvbmcgb2YgbGlrZWRTb25ncykge1xuICAgICAgaWYgKCFpbWFnZVVybHNbc29uZy5pZF0pIHtcbiAgICAgICAgbmV3VXJsc1tzb25nLmlkXSA9IGAvYXBpL2ltYWdlLXByb3h5P2ZpbGVpZD0ke3NvbmcuaW1nX2lkfWA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQXBwbHkgaWYgbmV3IFVSTHMgZm91bmRcbiAgICBpZiAoT2JqZWN0LmtleXMobmV3VXJscykubGVuZ3RoID4gMCkge1xuICAgICAgc2V0SW1hZ2VVcmxzKHByZXYgPT4gKHsgLi4ucHJldiwgLi4ubmV3VXJscyB9KSk7XG4gICAgfVxuICB9O1xuXG4gIGZldGNoSW1hZ2VzKCk7XG59LCBbZGlzcGxheUNvdW50LCBzb25ncywgcGxheWxpc3RzLCBsaWtlZFNvbmdzXSk7XG5cblxudXNlRWZmZWN0KCgpID0+IHtcbiAgY29uc29sZS5sb2coJ/CfjrUgcGVyc29uYWxpemVkTGlzdCB1cGRhdGVkOicsIHBlcnNvbmFsaXplZExpc3QpO1xufSwgW3BlcnNvbmFsaXplZExpc3RdKTtcblxuICAvLyBTZXQgbGFzdCBwbGF5ZWQgc29uZyBhcyBjdXJyZW50IHNvbmcgd2hlbiBkYXRhIGxvYWRzIChvbmx5IG9uY2UgYW5kIGlmIG5vdCBkaXNtaXNzZWQpXG51c2VFZmZlY3QoKCkgPT4ge1xuICBjb25zdCBsb2FkTGFzdFBsYXllZEltYWdlID0gYXN5bmMgKCkgPT4ge1xuICAgIGlmICh1c2VyICYmIGxhc3RQbGF5ZWRTb25nICYmICFoYXNTZXRMYXN0UGxheWVkU29uZyAmJiAhbGFzdFBsYXllZFNvbmdEaXNtaXNzZWQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn461IExvYWRpbmcgaW5pdGlhbCBwZXJzb25hbGl6ZWQgc29uZ3MgZm9yIGxhc3QgcGxheWVkIHNvbmcnKTtcbiAgICAgICAgY29uc3QgaW5pdGlhbFJlY3MgPSBhd2FpdCBnZXRQZXJzb25hbGl6ZWRTb25ncyh1c2VyLmlkLCBsYXN0UGxheWVkU29uZywgbGlzdGVuZWRTb25ncyk7XG4gICAgICAgIGNvbnN0IGZpbHRlcmVkID0gaW5pdGlhbFJlY3MuZmlsdGVyKHNvbmcgPT4gIXBsYXllZFNvbmdzLmhhcyhzb25nLmZpbGVfaWQudG9TdHJpbmcoKSkpO1xuICAgICAgICBjb25zdCBuZXdQZXJzb25hbGl6ZWRMaXN0ID0gW2xhc3RQbGF5ZWRTb25nLCAuLi5maWx0ZXJlZC5zbGljZSgwLCA0KV07XG4gICAgICAgIHNldFBlcnNvbmFsaXplZExpc3QobmV3UGVyc29uYWxpemVkTGlzdCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCfinIUgSW5pdGlhbCBwZXJzb25hbGl6ZWQgbGlzdCBzZXQ6JywgbmV3UGVyc29uYWxpemVkTGlzdC5sZW5ndGgsICdzb25ncycpO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGxvYWRpbmcgaW5pdGlhbCBwZXJzb25hbGl6ZWQgc29uZ3M6JywgZXJyb3IpO1xuICAgICAgICBzZXRQZXJzb25hbGl6ZWRMaXN0KFtsYXN0UGxheWVkU29uZ10pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBzZXRDdXJyZW50U29uZyhsYXN0UGxheWVkU29uZyk7XG4gICAgICBzZXRIYXNTZXRMYXN0UGxheWVkU29uZyh0cnVlKTtcblxuICAgICAgLy8gQWRkIHRvIGxpc3RlbmVkIHNvbmdzIGFuZCBsb2dcbiAgICAgIHNldExpc3RlbmVkU29uZ3MocHJldiA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1NldCA9IG5ldyBTZXQocHJldik7XG4gICAgICAgIG5ld1NldC5hZGQobGFzdFBsYXllZFNvbmcuZmlsZV9pZC50b1N0cmluZygpKTtcbiAgICAgICAgY29uc29sZS5sb2coJ/CfjrUgTGlzdGVuZWQgU29uZ3MgTGlzdDonLCBBcnJheS5mcm9tKG5ld1NldCkpO1xuICAgICAgICByZXR1cm4gbmV3U2V0O1xuICAgICAgfSk7XG5cbiAgICAgIGlmICghaW1hZ2VVcmxzW2xhc3RQbGF5ZWRTb25nLmltZ19pZF0pIHtcbiAgICAgICAgY29uc3QgdXJsID0gYC9hcGkvaW1hZ2UtcHJveHk/ZmlsZWlkPSR7bGFzdFBsYXllZFNvbmcuaW1nX2lkfWA7XG4gICAgICAgIHNldEltYWdlVXJscygocHJldikgPT4gKHtcbiAgICAgICAgICAuLi5wcmV2LFxuICAgICAgICAgIFtsYXN0UGxheWVkU29uZy5pbWdfaWRdOiB1cmxcbiAgICAgICAgfSkpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBsb2FkTGFzdFBsYXllZEltYWdlKCk7XG59LCBbbGFzdFBsYXllZFNvbmcsIGhhc1NldExhc3RQbGF5ZWRTb25nLCBsYXN0UGxheWVkU29uZ0Rpc21pc3NlZCwgdXNlciwgZ2V0UGVyc29uYWxpemVkU29uZ3NdKTtcblxuXG5jb25zdCBoYW5kbGVTb25nUGxheSA9IGFzeW5jIChzb25nOiBTb25nKSA9PiB7XG4gIHNldEN1cnJlbnRTb25nKHNvbmcpO1xuICBzZXRJc1BsYXlpbmcodHJ1ZSk7XG4gIHNldExhc3RQbGF5ZWRTb25nRGlzbWlzc2VkKGZhbHNlKTtcbiAgcmVjb3JkTGlzdGVuaW5nSGlzdG9yeShzb25nLmlkKTtcblxuICAvLyBBZGQgdG8gbGlzdGVuZWQgc29uZ3MgYW5kIGxvZ1xuICBzZXRMaXN0ZW5lZFNvbmdzKHByZXYgPT4ge1xuICAgIGNvbnN0IG5ld1NldCA9IG5ldyBTZXQocHJldik7XG4gICAgbmV3U2V0LmFkZChzb25nLmZpbGVfaWQudG9TdHJpbmcoKSk7XG4gICAgY29uc29sZS5sb2coJ/CfjrUgTGlzdGVuZWQgU29uZ3MgTGlzdDonLCBBcnJheS5mcm9tKG5ld1NldCkpO1xuICAgIHJldHVybiBuZXdTZXQ7XG4gIH0pO1xuXG4gIHNldFBsYXllZFNvbmdzKChwcmV2KSA9PiB7XG4gICAgY29uc3QgdXBkYXRlZCA9IG5ldyBTZXQocHJldik7XG4gICAgdXBkYXRlZC5hZGQoc29uZy5maWxlX2lkLnRvU3RyaW5nKCkpO1xuICAgIHJldHVybiB1cGRhdGVkO1xuICB9KTtcblxuICBpZiAodXNlcikge1xuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+OtSBGZXRjaGluZyBwZXJzb25hbGl6ZWQgc29uZ3MgZm9yOicsIHNvbmcubmFtZSk7XG4gICAgICBjb25zdCByZWNzID0gYXdhaXQgZ2V0UGVyc29uYWxpemVkU29uZ3ModXNlci5pZCwgc29uZywgbGlzdGVuZWRTb25ncyk7XG4gICAgICBjb25zdCBmaWx0ZXJlZCA9IHJlY3MuZmlsdGVyKHMgPT4gIXBsYXllZFNvbmdzLmhhcyhzLmZpbGVfaWQudG9TdHJpbmcoKSkpO1xuICAgICAgY29uc3QgbmV3UGVyc29uYWxpemVkTGlzdCA9IFtzb25nLCAuLi5maWx0ZXJlZC5zbGljZSgwLCA0KV07XG4gICAgICBzZXRQZXJzb25hbGl6ZWRMaXN0KG5ld1BlcnNvbmFsaXplZExpc3QpO1xuICAgICAgc2V0Q3VycmVudFNvbmdJbmRleCgwKTtcbiAgICAgIGNvbnNvbGUubG9nKCfinIUgTmV3IHBlcnNvbmFsaXplZCBsaXN0IHNldDonLCBuZXdQZXJzb25hbGl6ZWRMaXN0Lmxlbmd0aCwgJ3NvbmdzJyk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBmZXRjaGluZyBwZXJzb25hbGl6ZWQgc29uZ3M6JywgZXJyb3IpO1xuICAgICAgc2V0UGVyc29uYWxpemVkTGlzdChbc29uZ10pO1xuICAgICAgc2V0Q3VycmVudFNvbmdJbmRleCgwKTtcbiAgICB9XG4gIH1cbn07XG5cblxuICBjb25zdCBoYW5kbGVBZGRUb1F1ZXVlID0gKHNvbmc6IFNvbmcpID0+IHtcbiAgYWRkVG9RdWV1ZShzb25nKTtcbiAgdG9hc3Quc3VjY2VzcyhgQWRkZWQgXCIke3NvbmcubmFtZX1cIiB0byBxdWV1ZWApO1xufTtcblxuICBjb25zdCB0b2dnbGVQbGF5ID0gKCkgPT4ge1xuICAgIHNldElzUGxheWluZyghaXNQbGF5aW5nKTtcbiAgfTtcblxuICBjb25zdCB0b2dnbGVQbGF5ZXJTaXplID0gKCkgPT4ge1xuICAgIHNldElzUGxheWVyTWF4aW1pemVkKCFpc1BsYXllck1heGltaXplZCk7XG4gIH07XG5cbiAgY29uc3QgY2xvc2VQbGF5ZXIgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gU3RvcCB0cmFja2luZyBjdXJyZW50IHNvbmcgYmVmb3JlIGNsb3NpbmdcbiAgICBhd2FpdCBzdG9wQ3VycmVudFNvbmdUcmFja2luZygpO1xuICAgIHNldEN1cnJlbnRTb25nKG51bGwpO1xuICAgIHNldElzUGxheWluZyhmYWxzZSk7XG4gICAgc2V0SXNQbGF5ZXJNYXhpbWl6ZWQoZmFsc2UpO1xuICAgIFxuICAgIC8vIE1hcmsgbGFzdCBwbGF5ZWQgc29uZyBhcyBkaXNtaXNzZWQgc28gaXQgd29uJ3QgYXV0by1sb2FkIGFnYWluXG4gICAgc2V0TGFzdFBsYXllZFNvbmdEaXNtaXNzZWQodHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlVG9nZ2xlTGlrZSA9IChzb25nSWQ6IHN0cmluZykgPT4ge1xuICAgIHRvZ2dsZUxpa2Uoc29uZ0lkKTtcbiAgICBcbiAgICAvLyBVcGRhdGUgY3VycmVudCBzb25nIHN0YXRlIGlmIGl0J3MgdGhlIG9uZSBiZWluZyBsaWtlZC91bmxpa2VkXG4gICAgaWYgKGN1cnJlbnRTb25nICYmIGN1cnJlbnRTb25nLmlkID09PSBzb25nSWQpIHtcbiAgICAgIHNldEN1cnJlbnRTb25nKHByZXYgPT4gcHJldiA/IHsgLi4ucHJldiwgaXNMaWtlZDogIXByZXYuaXNMaWtlZCB9IDogbnVsbCk7XG4gICAgfVxuICB9O1xuXG5jb25zdCBoYW5kbGVQcmV2aW91cyA9ICgpID0+IHtcbiAgaWYgKCFjdXJyZW50U29uZykgcmV0dXJuO1xuXG4gIC8vIENoZWNrIGlmIHRoZXJlJ3MgYSBwcmV2aW91cyBzb25nIGluIHRoZSBwZXJzb25hbGl6ZWQgbGlzdFxuICBpZiAoY3VycmVudFNvbmdJbmRleCA+IDApIHtcbiAgICBjb25zdCBwcmV2SW5kZXggPSBjdXJyZW50U29uZ0luZGV4IC0gMTtcbiAgICBjb25zdCBwcmV2U29uZyA9IHBlcnNvbmFsaXplZExpc3RbcHJldkluZGV4XTtcbiAgICBcbiAgICBpZiAocHJldlNvbmcpIHtcbiAgICAgIHNldEN1cnJlbnRTb25nKHByZXZTb25nKTtcbiAgICAgIHNldEN1cnJlbnRTb25nSW5kZXgocHJldkluZGV4KTtcbiAgICAgIHNldElzUGxheWluZyh0cnVlKTtcbiAgICAgIHNldExhc3RQbGF5ZWRTb25nRGlzbWlzc2VkKGZhbHNlKTtcbiAgICAgIHJlY29yZExpc3RlbmluZ0hpc3RvcnkocHJldlNvbmcuaWQpO1xuXG4gICAgICAvLyBBZGQgdG8gbGlzdGVuZWQgc29uZ3MgYW5kIGxvZ1xuICAgICAgc2V0TGlzdGVuZWRTb25ncyhwcmV2ID0+IHtcbiAgICAgICAgY29uc3QgbmV3U2V0ID0gbmV3IFNldChwcmV2KTtcbiAgICAgICAgbmV3U2V0LmFkZChwcmV2U29uZy5maWxlX2lkLnRvU3RyaW5nKCkpO1xuICAgICAgICBjb25zb2xlLmxvZygn8J+OtSBMaXN0ZW5lZCBTb25ncyBMaXN0OicsIEFycmF5LmZyb20obmV3U2V0KSk7XG4gICAgICAgIHJldHVybiBuZXdTZXQ7XG4gICAgICB9KTtcblxuICAgICAgc2V0UGxheWVkU29uZ3MoKHByZXYpID0+IHtcbiAgICAgICAgY29uc3QgdXBkYXRlZCA9IG5ldyBTZXQocHJldik7XG4gICAgICAgIHVwZGF0ZWQuYWRkKG5leHRTb25nLmZpbGVfaWQudG9TdHJpbmcoKSk7XG4gICAgICAgIHJldHVybiB1cGRhdGVkO1xuICAgICAgfSk7XG5cbiAgICAgIC8vIFByZWxvYWQgaW1hZ2VcbiAgICAgIGlmICghaW1hZ2VVcmxzW3ByZXZTb25nLmltZ19pZF0pIHtcbiAgICAgICAgY29uc3QgbmV3VXJsID0gYC9hcGkvaW1hZ2UtcHJveHk/ZmlsZWlkPSR7cHJldlNvbmcuaW1nX2lkfWA7XG4gICAgICAgIHNldEltYWdlVXJscyhwcmV2ID0+ICh7IC4uLnByZXYsIFtwcmV2U29uZy5pbWdfaWRdOiBuZXdVcmwgfSkpO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJZiBhdCB0aGUgYmVnaW5uaW5nLCBqdXN0IHJlc3RhcnQgY3VycmVudCBzb25nXG4gICAgc2V0Q3VycmVudFRpbWUoMCk7XG4gICAgc2V0SXNQbGF5aW5nKHRydWUpO1xuICB9XG59O1xuXG51c2VFZmZlY3QoKCkgPT4ge1xuICBpZiAoIWN1cnJlbnRTb25nKSByZXR1cm47XG5cbiAgY29uc3QgY3VycmVudEluZGV4ID0gc29uZ3MuZmluZEluZGV4KHNvbmcgPT4gc29uZy5pZCA9PT0gY3VycmVudFNvbmcuaWQpO1xuICBjb25zdCBuZXh0SW5kZXggPSBjdXJyZW50SW5kZXggPCBzb25ncy5sZW5ndGggLSAxID8gY3VycmVudEluZGV4ICsgMSA6IDA7XG4gIGNvbnN0IG5leHRTb25nID0gc29uZ3NbbmV4dEluZGV4XTtcblxuICAvLyBQcmVsb2FkIG5leHQgc29uZyBpbWFnZSBpZiBub3QgaW4gY2FjaGVcbiAgaWYgKG5leHRTb25nICYmICFpbWFnZVVybHNbbmV4dFNvbmcuaW1nX2lkXSkge1xuICAgIGNvbnN0IG5ld1VybCA9IGAvYXBpL2ltYWdlLXByb3h5P2ZpbGVpZD0ke25leHRTb25nLmltZ19pZH1gO1xuICAgIHNldEltYWdlVXJscyhwcmV2ID0+ICh7IC4uLnByZXYsIFtuZXh0U29uZy5pbWdfaWRdOiBuZXdVcmwgfSkpO1xuICB9XG59LCBbY3VycmVudFNvbmcsIHNvbmdzXSk7XG5cbmNvbnN0IGhhbmRsZUxvYWRlZE1ldGFkYXRhID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBhdWRpbyA9IGF1ZGlvUmVmLmN1cnJlbnQ7XG4gIGlmICghYXVkaW8pIHJldHVybjtcblxuICBjb25zdCBsb2FkZWREdXJhdGlvbiA9IGF1ZGlvLmR1cmF0aW9uO1xuXG4gIGlmICghaXNOYU4obG9hZGVkRHVyYXRpb24pICYmIGlzRmluaXRlKGxvYWRlZER1cmF0aW9uKSkge1xuICAgIHNldER1cmF0aW9uKGxvYWRlZER1cmF0aW9uKTtcblxuICAgIGlmIChwZW5kaW5nU2Vla1RpbWUgIT09IG51bGwpIHtcbiAgICAgIGF1ZGlvLmN1cnJlbnRUaW1lID0gcGVuZGluZ1NlZWtUaW1lO1xuICAgICAgc2V0Q3VycmVudFRpbWUocGVuZGluZ1NlZWtUaW1lKTtcbiAgICAgIHNldFBlbmRpbmdTZWVrVGltZShudWxsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0Q3VycmVudFRpbWUoYXVkaW8uY3VycmVudFRpbWUpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBpZiAoaXNQbGF5aW5nKSB7XG4gICAgICAgIGF3YWl0IGF1ZGlvLnBsYXkoKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0F1dG8tcGxheSBlcnJvciBhZnRlciBtZXRhZGF0YSBsb2FkOicsIGVycik7XG4gICAgfVxuXG4gIH0gZWxzZSB7XG4gICAgLy8gUmV0cnkgbWV0YWRhdGEgcmVhZFxuICAgIHNldFRpbWVvdXQoaGFuZGxlTG9hZGVkTWV0YWRhdGEsIDEwMCk7XG4gIH1cbn07XG5cblxuXG5jb25zdCBoYW5kbGVOZXh0ID0gYXN5bmMgKCkgPT4ge1xuICBpZiAoIWN1cnJlbnRTb25nKSByZXR1cm47XG5cbiAgLy8gQ2hlY2sgaWYgdGhlcmUncyBhIHNvbmcgaW4gdGhlIHF1ZXVlIGZpcnN0XG4gIGNvbnN0IG5leHRRdWV1ZVNvbmcgPSBnZXROZXh0U29uZ0Zyb21RdWV1ZSgpO1xuICBpZiAobmV4dFF1ZXVlU29uZykge1xuICAgIHNldEN1cnJlbnRTb25nKG5leHRRdWV1ZVNvbmcpO1xuICAgIHNldElzUGxheWluZyh0cnVlKTtcbiAgICBzZXRMYXN0UGxheWVkU29uZ0Rpc21pc3NlZChmYWxzZSk7XG4gICAgcmVjb3JkTGlzdGVuaW5nSGlzdG9yeShuZXh0UXVldWVTb25nLmlkKTtcbiAgICBcbiAgICAvLyBBZGQgdG8gbGlzdGVuZWQgc29uZ3MgYW5kIGxvZ1xuICAgIHNldExpc3RlbmVkU29uZ3MocHJldiA9PiB7XG4gICAgICBjb25zdCBuZXdTZXQgPSBuZXcgU2V0KHByZXYpO1xuICAgICAgbmV3U2V0LmFkZChuZXh0UXVldWVTb25nLmZpbGVfaWQudG9TdHJpbmcoKSk7XG4gICAgICBjb25zb2xlLmxvZygn8J+OtSBMaXN0ZW5lZCBTb25ncyBMaXN0OicsIEFycmF5LmZyb20obmV3U2V0KSk7XG4gICAgICByZXR1cm4gbmV3U2V0O1xuICAgIH0pO1xuICAgIFxuICAgIC8vIFVwZGF0ZSBwZXJzb25hbGl6ZWQgbGlzdCB3aXRoIHRoZSBxdWV1ZSBzb25nXG4gICAgaWYgKHVzZXIpIHtcbiAgICAgIGNvbnN0IHJlY3MgPSBhd2FpdCBnZXRQZXJzb25hbGl6ZWRTb25ncyh1c2VyLmlkLCBuZXh0UXVldWVTb25nLCBsaXN0ZW5lZFNvbmdzKTtcbiAgICAgIGNvbnN0IGZpbHRlcmVkID0gcmVjcy5maWx0ZXIocyA9PiAhcGxheWVkU29uZ3MuaGFzKHMuZmlsZV9pZCkpO1xuICAgICAgY29uc3QgbmV3UGVyc29uYWxpemVkTGlzdCA9IFtuZXh0UXVldWVTb25nLCAuLi5maWx0ZXJlZC5zbGljZSgwLCA0KV07XG4gICAgICBzZXRQZXJzb25hbGl6ZWRMaXN0KG5ld1BlcnNvbmFsaXplZExpc3QpO1xuICAgICAgc2V0Q3VycmVudFNvbmdJbmRleCgwKTtcbiAgICB9XG4gICAgXG4gICAgLy8gUHJlbG9hZCBpbWFnZVxuICAgIGlmICghaW1hZ2VVcmxzW25leHRRdWV1ZVNvbmcuaW1nX2lkXSkge1xuICAgICAgY29uc3QgbmV3VXJsID0gYC9hcGkvaW1hZ2UtcHJveHk/ZmlsZWlkPSR7bmV4dFF1ZXVlU29uZy5pbWdfaWR9YDtcbiAgICAgIHNldEltYWdlVXJscyhwcmV2ID0+ICh7IC4uLnByZXYsIFtuZXh0UXVldWVTb25nLmltZ19pZF06IG5ld1VybCB9KSk7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIENoZWNrIGlmIHdlJ3JlIGF0IHRoZSBzZWNvbmQtdG8tbGFzdCBzb25nIGFuZCBuZWVkIHRvIGZldGNoIG1vcmVcbiAgaWYgKGN1cnJlbnRTb25nSW5kZXggPT09IHBlcnNvbmFsaXplZExpc3QubGVuZ3RoIC0gMiAmJiAhaXNGZXRjaGluZ01vcmUgJiYgdXNlciAmJiBjdXJyZW50U29uZykge1xuICAgIGNvbnNvbGUubG9nKCfwn5SEIEZldGNoaW5nIG1vcmUgc29uZ3MgYXQgc2Vjb25kLXRvLWxhc3QgcG9zaXRpb24uLi4nKTtcbiAgICBzZXRJc0ZldGNoaW5nTW9yZSh0cnVlKTtcbiAgICBcbiAgICB0cnkge1xuICAgICAgY29uc3QgbmV3UmVjcyA9IGF3YWl0IGdldFBlcnNvbmFsaXplZFNvbmdzKHVzZXIuaWQsIGN1cnJlbnRTb25nLCBsaXN0ZW5lZFNvbmdzKTtcbiAgICAgIGNvbnN0IGZpbHRlcmVkID0gbmV3UmVjcy5maWx0ZXIoc29uZyA9PiBcbiAgICAgICAgIXBsYXllZFNvbmdzLmhhcyhzb25nLmZpbGVfaWQudG9TdHJpbmcoKSkgJiZcbiAgICAgICAgIWxpc3RlbmVkU29uZ3MuaGFzKHNvbmcuZmlsZV9pZC50b1N0cmluZygpKSAmJlxuICAgICAgICAhcGVyc29uYWxpemVkTGlzdC5zb21lKGV4aXN0aW5nID0+IGV4aXN0aW5nLmZpbGVfaWQgPT09IHNvbmcuZmlsZV9pZClcbiAgICAgICk7XG4gICAgICBcbiAgICAgIGlmIChmaWx0ZXJlZC5sZW5ndGggPiAwKSB7XG4gICAgICAgIHNldFBlcnNvbmFsaXplZExpc3QocHJldiA9PiBbLi4ucHJldiwgLi4uZmlsdGVyZWQuc2xpY2UoMCwgNSldKTtcbiAgICAgICAgY29uc29sZS5sb2coJ+KchSBBZGRlZCcsIGZpbHRlcmVkLnNsaWNlKDAsIDUpLmxlbmd0aCwgJ21vcmUgc29uZ3MgdG8gcGVyc29uYWxpemVkIGxpc3QnKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm9yIGZldGNoaW5nIG1vcmUgc29uZ3M6JywgZXJyb3IpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0ZldGNoaW5nTW9yZShmYWxzZSk7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgbm8gcXVldWUsIHByb2NlZWQgd2l0aCBwZXJzb25hbGl6ZWQgbGlzdFxuICBjb25zdCBuZXh0SW5kZXggPSBjdXJyZW50U29uZ0luZGV4ICsgMTtcblxuICBpZiAobmV4dEluZGV4IDwgcGVyc29uYWxpemVkTGlzdC5sZW5ndGgpIHtcbiAgICBjb25zdCBuZXh0U29uZyA9IHBlcnNvbmFsaXplZExpc3RbbmV4dEluZGV4XTtcbiAgICBzZXRDdXJyZW50U29uZyhuZXh0U29uZyk7XG4gICAgc2V0Q3VycmVudFNvbmdJbmRleChuZXh0SW5kZXgpO1xuICAgIHNldElzUGxheWluZyh0cnVlKTtcbiAgICBzZXRMYXN0UGxheWVkU29uZ0Rpc21pc3NlZChmYWxzZSk7XG4gICAgcmVjb3JkTGlzdGVuaW5nSGlzdG9yeShuZXh0U29uZy5pZCk7XG5cbiAgICAvLyBBZGQgdG8gbGlzdGVuZWQgc29uZ3MgYW5kIGxvZ1xuICAgIHNldExpc3RlbmVkU29uZ3MocHJldiA9PiB7XG4gICAgICBjb25zdCBuZXdTZXQgPSBuZXcgU2V0KHByZXYpO1xuICAgICAgbmV3U2V0LmFkZChuZXh0U29uZy5maWxlX2lkLnRvU3RyaW5nKCkpO1xuICAgICAgY29uc29sZS5sb2coJ/CfjrUgTGlzdGVuZWQgU29uZ3MgTGlzdDonLCBBcnJheS5mcm9tKG5ld1NldCkpO1xuICAgICAgcmV0dXJuIG5ld1NldDtcbiAgICB9KTtcblxuICAgIHNldFBsYXllZFNvbmdzKChwcmV2KSA9PiB7XG4gICAgICBjb25zdCB1cGRhdGVkID0gbmV3IFNldChwcmV2KTtcbiAgICAgIHVwZGF0ZWQuYWRkKFN0cmluZyhuZXh0U29uZy5maWxlX2lkKSk7XG4gICAgICByZXR1cm4gdXBkYXRlZDtcbiAgICB9KTtcblxuICAgIC8vIFByZWxvYWQgaW1hZ2VcbiAgICBpZiAoIWltYWdlVXJsc1tuZXh0U29uZy5pbWdfaWRdKSB7XG4gICAgICBjb25zdCBuZXdVcmwgPSBgL2FwaS9pbWFnZS1wcm94eT9maWxlaWQ9JHtuZXh0U29uZy5pbWdfaWR9YDtcbiAgICAgIHNldEltYWdlVXJscyhwcmV2ID0+ICh7IC4uLnByZXYsIFtuZXh0U29uZy5pbWdfaWRdOiBuZXdVcmwgfSkpO1xuICAgIH1cblxuICB9IGVsc2Uge1xuICAgIC8vIElmIHdlJ3ZlIHJlYWNoZWQgdGhlIGVuZCBvZiBwZXJzb25hbGl6ZWQgbGlzdCwgZ2V0IG5ldyByZWNvbW1lbmRhdGlvbnNcbiAgICBpZiAodXNlciAmJiBjdXJyZW50U29uZykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc29sZS5sb2coJ/CflIQgRmV0Y2hpbmcgbmV3IHJlY29tbWVuZGF0aW9ucyBhdCBlbmQgb2YgbGlzdCcpO1xuICAgICAgICBjb25zdCBuZXdSZWNzID0gYXdhaXQgZ2V0UGVyc29uYWxpemVkU29uZ3ModXNlci5pZCwgY3VycmVudFNvbmcsIGxpc3RlbmVkU29uZ3MpO1xuICAgICAgICBjb25zdCBmaWx0ZXJlZCA9IG5ld1JlY3MuZmlsdGVyKHNvbmcgPT4gXG4gICAgICAgICAgIXBsYXllZFNvbmdzLmhhcyhzb25nLmZpbGVfaWQudG9TdHJpbmcoKSkgJiZcbiAgICAgICAgICAhbGlzdGVuZWRTb25ncy5oYXMoc29uZy5maWxlX2lkLnRvU3RyaW5nKCkpXG4gICAgICAgICk7XG4gICAgICAgIFxuICAgICAgICBpZiAoZmlsdGVyZWQubGVuZ3RoID4gMCkge1xuICAgICAgICAgIGNvbnN0IG5leHRTb25nID0gZmlsdGVyZWRbMF07XG4gICAgICAgICAgdXBkYXRlZC5hZGQobmV4dFNvbmcuZmlsZV9pZC50b1N0cmluZygpKTtcbiAgICAgICAgICBzZXRJc1BsYXlpbmcodHJ1ZSk7XG4gICAgICAgICAgc2V0TGFzdFBsYXllZFNvbmdEaXNtaXNzZWQoZmFsc2UpO1xuICAgICAgICAgIHJlY29yZExpc3RlbmluZ0hpc3RvcnkobmV4dFNvbmcuaWQpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEFkZCB0byBsaXN0ZW5lZCBzb25ncyBhbmQgbG9nXG4gICAgICAgICAgc2V0TGlzdGVuZWRTb25ncyhwcmV2ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1NldCA9IG5ldyBTZXQocHJldik7XG4gICAgICAgICAgICBuZXdTZXQuYWRkKG5leHRTb25nLmZpbGVfaWQudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygn8J+OtSBMaXN0ZW5lZCBTb25ncyBMaXN0OicsIEFycmF5LmZyb20obmV3U2V0KSk7XG4gICAgICAgICAgICByZXR1cm4gbmV3U2V0O1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIENyZWF0ZSBuZXcgcGVyc29uYWxpemVkIGxpc3Qgc3RhcnRpbmcgd2l0aCB0aGlzIHNvbmdcbiAgICAgICAgICBjb25zdCBuZXdQZXJzb25hbGl6ZWRMaXN0ID0gW25leHRTb25nLCAuLi5maWx0ZXJlZC5zbGljZSgxLCA1KV07XG4gICAgICAgICAgc2V0UGVyc29uYWxpemVkTGlzdChuZXdQZXJzb25hbGl6ZWRMaXN0KTtcbiAgICAgICAgICBzZXRDdXJyZW50U29uZ0luZGV4KDApO1xuICAgICAgICAgIFxuICAgICAgICAgIHNldFBsYXllZFNvbmdzKChwcmV2KSA9PiB7XG4gICAgICAgICAgICBjb25zdCB1cGRhdGVkID0gbmV3IFNldChwcmV2KTtcbiAgICAgICAgICAgIHVwZGF0ZWQuYWRkKG5leHRTb25nLmZpbGVfaWQudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlZDtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBQcmVsb2FkIGltYWdlXG4gICAgICAgICAgaWYgKCFpbWFnZVVybHNbbmV4dFNvbmcuaW1nX2lkXSkge1xuICAgICAgICAgICAgY29uc3QgbmV3VXJsID0gYC9hcGkvaW1hZ2UtcHJveHk/ZmlsZWlkPSR7bmV4dFNvbmcuaW1nX2lkfWA7XG4gICAgICAgICAgICBzZXRJbWFnZVVybHMocHJldiA9PiAoeyAuLi5wcmV2LCBbbmV4dFNvbmcuaW1nX2lkXTogbmV3VXJsIH0pKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgY29uc29sZS5sb2coJ+KchSBOZXcgcmVjb21tZW5kYXRpb25zIGxvYWRlZDonLCBuZXdQZXJzb25hbGl6ZWRMaXN0Lmxlbmd0aCwgJ3NvbmdzJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKCfimqDvuI8gTm8gbW9yZSByZWNvbW1lbmRhdGlvbnMgYXZhaWxhYmxlJyk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBmZXRjaGluZyBuZXcgcmVjb21tZW5kYXRpb25zOicsIGVycm9yKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cblxuXG5cbiAgY29uc3QgZm9ybWF0TnVtYmVyID0gKG51bTogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgICBpZiAobnVtID49IDEwMDAwMDApIHtcbiAgICAgIHJldHVybiAobnVtIC8gMTAwMDAwMCkudG9GaXhlZCgxKSArICdNJztcbiAgICB9IGVsc2UgaWYgKG51bSA+PSAxMDAwKSB7XG4gICAgICByZXR1cm4gKG51bSAvIDEwMDApLnRvRml4ZWQoMSkgKyAnSyc7XG4gICAgfVxuICAgIHJldHVybiBudW0udG9TdHJpbmcoKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVBZGRUb1BsYXlsaXN0ID0gKHNvbmc6IFNvbmcpID0+IHtcbiAgICBzZXRTZWxlY3RlZFNvbmdGb3JQbGF5bGlzdChzb25nKTtcbiAgICBzZXRTaG93QWRkVG9QbGF5bGlzdE1vZGFsKHRydWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZVNvbmdFbmQgPSBhc3luYyAoKSA9PiB7XG4gICAgLy8gV2hlbiBhIHNvbmcgZW5kcywgYXV0b21hdGljYWxseSBwbGF5IHRoZSBuZXh0IG9uZVxuICAgIGF3YWl0IGhhbmRsZU5leHQoKTtcbn07XG5cbiAgY29uc3QgcmVuZGVyQ29udGVudCA9ICgpID0+IHtcbiAgICBpZiAoY3VycmVudFBhZ2UgPT09ICdwbGF5bGlzdHMnKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8UGxheWxpc3RzUGFnZSBcbiAgICAgICAgICBwbGF5bGlzdHM9e3BsYXlsaXN0c30gXG4gICAgICAgICAgb25CYWNrPXsoKSA9PiBzZXRDdXJyZW50UGFnZSgnbWFpbicpfSBcbiAgICAgICAgICBvblNvbmdQbGF5PXtoYW5kbGVTb25nUGxheX1cbiAgICAgICAgICBvbkFkZFRvUXVldWU9e2hhbmRsZUFkZFRvUXVldWV9XG4gICAgICAgICAgb25DcmVhdGVQbGF5bGlzdD17KCkgPT4gc2V0U2hvd0NyZWF0ZVBsYXlsaXN0TW9kYWwodHJ1ZSl9XG4gICAgICAgICAgb25EZWxldGVQbGF5bGlzdD17ZGVsZXRlUGxheWxpc3R9XG4gICAgICAgICAgb25SZW5hbWVQbGF5bGlzdD17cmVuYW1lUGxheWxpc3R9XG4gICAgICAgICAgb25SZW1vdmVTb25nRnJvbVBsYXlsaXN0PXtyZW1vdmVTb25nRnJvbVBsYXlsaXN0fVxuICAgICAgICAgIGltYWdlVXJscz17aW1hZ2VVcmxzfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKGN1cnJlbnRQYWdlID09PSAnbGlrZWQnKSB7XG4gICAgICByZXR1cm4gPExpa2VkU29uZ3NQYWdlIHNvbmdzPXtsaWtlZFNvbmdzfSBvbkJhY2s9eygpID0+IHNldEN1cnJlbnRQYWdlKCdtYWluJyl9IG9uU29uZ1BsYXk9e2hhbmRsZVNvbmdQbGF5fSBvbkFkZFRvUXVldWU9e2hhbmRsZUFkZFRvUXVldWV9IGltYWdlVXJscz17aW1hZ2VVcmxzfS8+O1xuICAgIH1cblxuICAgIHN3aXRjaCAoYWN0aXZlVGFiKSB7XG4gICAgICBjYXNlICdob21lJzpcbiAgICAgICAgcmV0dXJuIDxIb21lUGFnZVxuICAgICAgICAgICAgICAgIHNvbmdzPXtkaXNwbGF5ZWRTb25nc31cbiAgICAgICAgICAgICAgICBvblNvbmdQbGF5PXtoYW5kbGVTb25nUGxheX1cbiAgICAgICAgICAgICAgICBmb3JtYXROdW1iZXI9e2Zvcm1hdE51bWJlcn1cbiAgICAgICAgICAgICAgICBvbkFkZFRvUGxheWxpc3Q9e2hhbmRsZUFkZFRvUGxheWxpc3R9XG4gICAgICAgICAgICAgICAgb25BZGRUb1F1ZXVlPXtoYW5kbGVBZGRUb1F1ZXVlfVxuICAgICAgICAgICAgICAgIGltYWdlVXJscz17aW1hZ2VVcmxzfVxuICAgICAgICAgICAgICAgIG9uTG9hZE1vcmU9e2xvYWRNb3JlU29uZ3N9XG4gICAgICAgICAgICAgICAgaGFzTW9yZVNvbmdzPXtkaXNwbGF5Q291bnQgPCBzb25ncy5sZW5ndGh9XG4gICAgICAgICAgICAgIC8+O1xuICAgICAgY2FzZSAnc2VhcmNoJzpcbiAgICAgICAgcmV0dXJuIDxTZWFyY2hQYWdlXG4gICAgICAgICAgICAgIHNvbmdzPXtzb25nc31cbiAgICAgICAgICAgICAgb25Tb25nUGxheT17aGFuZGxlU29uZ1BsYXl9XG4gICAgICAgICAgICAgIGZvcm1hdE51bWJlcj17Zm9ybWF0TnVtYmVyfVxuICAgICAgICAgICAgICBvbkFkZFRvUGxheWxpc3Q9e2hhbmRsZUFkZFRvUGxheWxpc3R9XG4gICAgICAgICAgICAgIG9uQWRkVG9RdWV1ZT17aGFuZGxlQWRkVG9RdWV1ZX1cbiAgICAgICAgICAgICAgaW1hZ2VVcmxzPXtpbWFnZVVybHN9XG4gICAgICAgICAgICAgIHNldEltYWdlVXJscz17c2V0SW1hZ2VVcmxzfVxuICAgICAgICAgICAgLz47XG4gICAgICBjYXNlICdzZXR0aW5ncyc6XG4gICAgICAgIHJldHVybiA8U2V0dGluZ3NQYWdlIG9uUGxheWxpc3RzQ2xpY2s9eygpID0+IHNldEN1cnJlbnRQYWdlKCdwbGF5bGlzdHMnKX0gb25MaWtlZENsaWNrPXsoKSA9PiBzZXRDdXJyZW50UGFnZSgnbGlrZWQnKX0gLz47XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gPEhvbWVQYWdlXG4gICAgICAgICAgICAgIHNvbmdzPXtkaXNwbGF5ZWRTb25nc31cbiAgICAgICAgICAgICAgb25Tb25nUGxheT17aGFuZGxlU29uZ1BsYXl9XG4gICAgICAgICAgICAgIGZvcm1hdE51bWJlcj17Zm9ybWF0TnVtYmVyfVxuICAgICAgICAgICAgICBvbkFkZFRvUGxheWxpc3Q9e2hhbmRsZUFkZFRvUGxheWxpc3R9XG4gICAgICAgICAgICAgIG9uQWRkVG9RdWV1ZT17aGFuZGxlQWRkVG9RdWV1ZX1cbiAgICAgICAgICAgICAgaW1hZ2VVcmxzPXtpbWFnZVVybHN9XG4gICAgICAgICAgICAgIG9uTG9hZE1vcmU9e2xvYWRNb3JlU29uZ3N9XG4gICAgICAgICAgICAgIGhhc01vcmVTb25ncz17ZGlzcGxheUNvdW50IDwgc29uZ3MubGVuZ3RofVxuICAgICAgICAgICAgLz47XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHRoZW1lQ2xhc3NlcyA9IGlzRGFya01vZGUgXG4gICAgPyAnYmctZ3JheS05MDAgdGV4dC13aGl0ZScgXG4gICAgOiAnYmctZ3JheS01MCB0ZXh0LWdyYXktOTAwJztcbmNvbnN0IHNldEN1cnJlbnRUaW1lU3RhdGUgPSBzZXRDdXJyZW50VGltZTtcblxuICByZXR1cm4gKFxuICAgIFxuICAgICAgPGRpdiBjbGFzc05hbWU9e2BtaW4taC1zY3JlZW4gJHt0aGVtZUNsYXNzZXN9IHJlbGF0aXZlIG92ZXJmbG93LWhpZGRlbmB9PlxuICAgICAgICB7LyogTWFpbiBDb250ZW50ICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTMwMCAke2N1cnJlbnRTb25nID8gJ3BiLTM2JyA6ICdwYi0yMCd9YH0+XG4gICAgICAgICAge3JlbmRlckNvbnRlbnQoKX1cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgey8qIEJvdHRvbSBOYXZpZ2F0aW9uICovfVxuICAgICAgICB7Y3VycmVudFBhZ2UgPT09ICdtYWluJyAmJiAoXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2BmaXhlZCBib3R0b20tMCBsZWZ0LTAgcmlnaHQtMCAke2lzRGFya01vZGUgPyAnYmctZ3JheS04MDAgYm9yZGVyLWdyYXktNzAwJyA6ICdiZy13aGl0ZSBib3JkZXItZ3JheS0yMDAnfSBib3JkZXItdCB6LTMwYH0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYXJvdW5kIHB5LTNcIj5cbiAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldEFjdGl2ZVRhYignaG9tZScpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIHNwYWNlLXktMSBwLTIgdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgICAgIGFjdGl2ZVRhYiA9PT0gJ2hvbWUnID8gJ3RleHQtcHVycGxlLTQwMCcgOiBpc0RhcmtNb2RlID8gJ3RleHQtZ3JheS00MDAnIDogJ3RleHQtZ3JheS02MDAnXG4gICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8SG9tZUljb24gc2l6ZT17MjR9IC8+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14c1wiPkhvbWU8L3NwYW4+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKCdzZWFyY2gnKX1cbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BmbGV4IGZsZXgtY29sIGl0ZW1zLWNlbnRlciBzcGFjZS15LTEgcC0yIHRyYW5zaXRpb24tY29sb3JzICR7XG4gICAgICAgICAgICAgICAgICBhY3RpdmVUYWIgPT09ICdzZWFyY2gnID8gJ3RleHQtcHVycGxlLTQwMCcgOiBpc0RhcmtNb2RlID8gJ3RleHQtZ3JheS00MDAnIDogJ3RleHQtZ3JheS02MDAnXG4gICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8U2VhcmNoIHNpemU9ezI0fSAvPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHNcIj5TZWFyY2g8L3NwYW4+XG4gICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0QWN0aXZlVGFiKCdzZXR0aW5ncycpfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIHNwYWNlLXktMSBwLTIgdHJhbnNpdGlvbi1jb2xvcnMgJHtcbiAgICAgICAgICAgICAgICAgIGFjdGl2ZVRhYiA9PT0gJ3NldHRpbmdzJyA/ICd0ZXh0LXB1cnBsZS00MDAnIDogaXNEYXJrTW9kZSA/ICd0ZXh0LWdyYXktNDAwJyA6ICd0ZXh0LWdyYXktNjAwJ1xuICAgICAgICAgICAgICAgIH1gfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPFNldHRpbmdzIHNpemU9ezI0fSAvPlxuICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQteHNcIj5TZXR0aW5nczwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cblxuICAgICAgICB7LyogTXVzaWMgUGxheWVyIC0gT25seSBzaG93IGlmIGN1cnJlbnRTb25nIGV4aXN0cyAqL31cbiAgICAgICAge2N1cnJlbnRTb25nICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgeyFpc1BsYXllck1heGltaXplZCA/IChcbiAgICAgICAgICAgICAgPE1pbmltaXplZFBsYXllclxuICAgICAgICAgICAgICAgIHNvbmc9e2N1cnJlbnRTb25nfVxuICAgICAgICAgICAgICAgIGlzUGxheWluZz17aXNQbGF5aW5nfVxuICAgICAgICAgICAgICAgIGltYWdlVXJsPXtpbWFnZVVybHNbY3VycmVudFNvbmcuaW1nX2lkXX1cbiAgICAgICAgICAgICAgICBvblRvZ2dsZVBsYXk9e3RvZ2dsZVBsYXl9XG4gICAgICAgICAgICAgICAgb25NYXhpbWl6ZT17dG9nZ2xlUGxheWVyU2l6ZX1cbiAgICAgICAgICAgICAgICBvblByZXZpb3VzPXtoYW5kbGVQcmV2aW91c31cbiAgICAgICAgICAgICAgICBvbk5leHQ9e2hhbmRsZU5leHR9XG4gICAgICAgICAgICAgICAgb25DbG9zZT17Y2xvc2VQbGF5ZXJ9XG4gICAgICAgICAgICAgICAgb25Ub2dnbGVMaWtlPXsoKSA9PiBoYW5kbGVUb2dnbGVMaWtlKGN1cnJlbnRTb25nLmlkKX1cbiAgICAgICAgICAgICAgICBmb3JtYXROdW1iZXI9e2Zvcm1hdE51bWJlcn1cbiAgICAgICAgICAgICAgICBjdXJyZW50VGltZT17Y3VycmVudFRpbWV9XG4gICAgICAgICAgICAgICAgZHVyYXRpb249e2R1cmF0aW9ufVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgPE1heGltaXplZFBsYXllclxuICAgICAgICAgICAgICAgIHNvbmc9e2N1cnJlbnRTb25nfVxuICAgICAgICAgICAgICAgIGlzUGxheWluZz17aXNQbGF5aW5nfVxuICAgICAgICAgICAgICAgIGltYWdlVXJsPXtpbWFnZVVybHNbY3VycmVudFNvbmcuaW1nX2lkXX1cbiAgICAgICAgICAgICAgICBvblRvZ2dsZVBsYXk9e3RvZ2dsZVBsYXl9XG4gICAgICAgICAgICAgICAgb25NaW5pbWl6ZT17dG9nZ2xlUGxheWVyU2l6ZX1cbiAgICAgICAgICAgICAgICBvblByZXZpb3VzPXtoYW5kbGVQcmV2aW91c31cbiAgICAgICAgICAgICAgICBvbk5leHQ9e2hhbmRsZU5leHR9XG4gICAgICAgICAgICAgICAgb25Ub2dnbGVMaWtlPXsoKSA9PiBoYW5kbGVUb2dnbGVMaWtlKGN1cnJlbnRTb25nLmlkKX1cbiAgICAgICAgICAgICAgICBmb3JtYXROdW1iZXI9e2Zvcm1hdE51bWJlcn1cbiAgICAgICAgICAgICAgICBvbkFkZFRvUGxheWxpc3Q9eygpID0+IGhhbmRsZUFkZFRvUGxheWxpc3QoY3VycmVudFNvbmcpfVxuICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lPXtjdXJyZW50VGltZX1cbiAgICAgICAgICAgICAgICBkdXJhdGlvbj17ZHVyYXRpb259XG5cbiAgICAgICAgICAgICAgc2V0Q3VycmVudFRpbWU9eyhzZWVrVGltZSkgPT4ge1xuICBpZiAoYXVkaW9SZWYuY3VycmVudCAmJiAhaXNOYU4oYXVkaW9SZWYuY3VycmVudC5kdXJhdGlvbikpIHtcbiAgICBzZXRJc0V4dGVybmFsbHlTZWVraW5nKHRydWUpO1xuICAgIGF1ZGlvUmVmLmN1cnJlbnQuY3VycmVudFRpbWUgPSBzZWVrVGltZTtcbiAgICBzZXRDdXJyZW50VGltZVN0YXRlKHNlZWtUaW1lKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHNldElzRXh0ZXJuYWxseVNlZWtpbmcoZmFsc2UpLCAyMDApO1xuICB9IGVsc2Uge1xuICAgIHNldFBlbmRpbmdTZWVrVGltZShzZWVrVGltZSk7IC8vIFdpbGwgYXBwbHkgb25Mb2FkZWRNZXRhZGF0YVxuICB9XG59fVxuXG5cblxuICAgICAgICAgICAgICAgIHZvbHVtZT17dm9sdW1lfVxuICAgICAgICAgICAgICAgIHNldFZvbHVtZT17c2V0Vm9sdW1lfVxuICAgICAgICAgICAgICAgIGlzU2Vla2luZz17aXNTZWVraW5nfVxuICAgICAgICAgICAgICAgIHNldElzU2Vla2luZz17c2V0SXNTZWVraW5nfVxuICAgICAgICAgICAgICAgIHF1ZXVlPXtxdWV1ZX1cbiAgICAgICAgICAgICAgICBvblJlbW92ZUZyb21RdWV1ZT17cmVtb3ZlRnJvbVF1ZXVlfVxuICAgICAgICAgICAgICAgIG9uU29uZ1BsYXk9e2hhbmRsZVNvbmdQbGF5fVxuICAgICAgICAgICAgICAgIGltYWdlVXJscz17aW1hZ2VVcmxzfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8Lz5cbiAgICAgICAgKX1cblxuICAgICAgICB7LyogTW9kYWxzICovfVxuICAgICAgICA8Q3JlYXRlUGxheWxpc3RNb2RhbFxuICAgICAgICAgIGlzT3Blbj17c2hvd0NyZWF0ZVBsYXlsaXN0TW9kYWx9XG4gICAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0U2hvd0NyZWF0ZVBsYXlsaXN0TW9kYWwoZmFsc2UpfVxuICAgICAgICAgIG9uQ3JlYXRlUGxheWxpc3Q9e2NyZWF0ZVBsYXlsaXN0fVxuICAgICAgICAvPlxuXG4gICAgICAgIDxBZGRUb1BsYXlsaXN0TW9kYWxcbiAgICAgICAgICBpc09wZW49e3Nob3dBZGRUb1BsYXlsaXN0TW9kYWx9XG4gICAgICAgICAgb25DbG9zZT17KCkgPT4ge1xuICAgICAgICAgICAgc2V0U2hvd0FkZFRvUGxheWxpc3RNb2RhbChmYWxzZSk7XG4gICAgICAgICAgICBzZXRTZWxlY3RlZFNvbmdGb3JQbGF5bGlzdChudWxsKTtcbiAgICAgICAgICB9fVxuICAgICAgICAgIHNvbmc9e3NlbGVjdGVkU29uZ0ZvclBsYXlsaXN0fVxuICAgICAgICAgIHBsYXlsaXN0cz17cGxheWxpc3RzfVxuICAgICAgICAgIG9uQWRkVG9QbGF5bGlzdD17YWRkU29uZ1RvUGxheWxpc3R9XG4gICAgICAgICAgb25DcmVhdGVQbGF5bGlzdD17KCkgPT4ge1xuICAgICAgICAgICAgc2V0U2hvd0FkZFRvUGxheWxpc3RNb2RhbChmYWxzZSk7XG4gICAgICAgICAgICBzZXRTaG93Q3JlYXRlUGxheWxpc3RNb2RhbCh0cnVlKTtcbiAgICAgICAgICB9fVxuICAgICAgICAgIGltYWdlVXJscz17aW1hZ2VVcmxzfVxuICAgICAgICAgIHNldEltYWdlVXJscz17c2V0SW1hZ2VVcmxzfVxuICAgICAgICAvPlxuICAgICAgICA8YXVkaW9cbiAgICAgICAgICByZWY9e2F1ZGlvUmVmfVxuICAgICAgICAgIHNyYz17YXVkaW9VcmwgPz8gdW5kZWZpbmVkfVxuICAgICAgICAgIG9uRW5kZWQ9e2hhbmRsZVNvbmdFbmR9XG4gICAgICAgICAgb25UaW1lVXBkYXRlPXsoKSA9PiB7XG4gICAgICAgICAgaWYgKGF1ZGlvUmVmLmN1cnJlbnQgJiYgIWlzU2Vla2luZyAmJiAhaXNFeHRlcm5hbGx5U2Vla2luZykge1xuICAgICAgICAgICAgY29uc3QgY3VycmVudCA9IGF1ZGlvUmVmLmN1cnJlbnQuY3VycmVudFRpbWU7XG4gICAgICAgICAgICAvLyBPbmx5IHVwZGF0ZSBzdGF0ZSBpZiB0aGUgZGlmZmVyZW5jZSBpcyBzaWduaWZpY2FudFxuICAgICAgICAgICAgaWYgKE1hdGguYWJzKGN1cnJlbnRUaW1lIC0gY3VycmVudCkgPiAwLjI1KSB7XG4gICAgICAgICAgICAgIHNldEN1cnJlbnRUaW1lKGN1cnJlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfX1cblxuXG4gICAgICAgICAgb25Mb2FkZWRNZXRhZGF0YT17aGFuZGxlTG9hZGVkTWV0YWRhdGF9XG4gICAgICAgICAgb25Wb2x1bWVDaGFuZ2U9eygpID0+IHtcbiAgICAgICAgICAgIGlmIChhdWRpb1JlZi5jdXJyZW50KSB7XG4gICAgICAgICAgICAgIHNldFZvbHVtZShhdWRpb1JlZi5jdXJyZW50LnZvbHVtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICBzdHlsZT17eyBkaXNwbGF5OiAnbm9uZScgfX1cbiAgICAgICAgLz5cblxuICAgICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIE11c2ljUGxheWVyQXBwKCkge1xuICByZXR1cm4gKFxuICAgIDxBdXRoV3JhcHBlcj5cbiAgICAgIDxUb2FzdGVyIHBvc2l0aW9uPVwiYm90dG9tLWNlbnRlclwiIC8+XG4gICAgICA8TXVzaWNQbGF5ZXJDb250ZW50IC8+XG4gICAgPC9BdXRoV3JhcHBlcj5cbiAgKTtcbn0iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsIkhvbWUiLCJIb21lSWNvbiIsIlNlYXJjaCIsIlNldHRpbmdzIiwiSG9tZVBhZ2UiLCJTZWFyY2hQYWdlIiwiU2V0dGluZ3NQYWdlIiwiUGxheWxpc3RzUGFnZSIsIkxpa2VkU29uZ3NQYWdlIiwiTWluaW1pemVkUGxheWVyIiwiTWF4aW1pemVkUGxheWVyIiwiQ3JlYXRlUGxheWxpc3RNb2RhbCIsIkFkZFRvUGxheWxpc3RNb2RhbCIsIkF1dGhXcmFwcGVyIiwidXNlQXV0aCIsInVzZVN1cGFiYXNlRGF0YSIsInVzZVF1ZXVlIiwidXNlVGhlbWUiLCJUb2FzdGVyIiwidG9hc3QiLCJNdXNpY1BsYXllckNvbnRlbnQiLCJ1c2VyIiwic29uZ3MiLCJwbGF5bGlzdHMiLCJsaWtlZFNvbmdzIiwibGFzdFBsYXllZFNvbmciLCJsb2FkaW5nIiwidG9nZ2xlTGlrZSIsImNyZWF0ZVBsYXlsaXN0IiwiZGVsZXRlUGxheWxpc3QiLCJyZW5hbWVQbGF5bGlzdCIsImFkZFNvbmdUb1BsYXlsaXN0IiwicmVtb3ZlU29uZ0Zyb21QbGF5bGlzdCIsInJlY29yZExpc3RlbmluZ0hpc3RvcnkiLCJzdG9wQ3VycmVudFNvbmdUcmFja2luZyIsImdldFBlcnNvbmFsaXplZFNvbmdzIiwicXVldWUiLCJhZGRUb1F1ZXVlIiwicmVtb3ZlRnJvbVF1ZXVlIiwiZ2V0TmV4dFNvbmdGcm9tUXVldWUiLCJjbGVhclF1ZXVlIiwiaGFzUXVldWUiLCJhY3RpdmVUYWIiLCJzZXRBY3RpdmVUYWIiLCJjdXJyZW50UGFnZSIsInNldEN1cnJlbnRQYWdlIiwiY3VycmVudFNvbmciLCJzZXRDdXJyZW50U29uZyIsImlzUGxheWluZyIsInNldElzUGxheWluZyIsImlzUGxheWVyTWF4aW1pemVkIiwic2V0SXNQbGF5ZXJNYXhpbWl6ZWQiLCJzaG93Q3JlYXRlUGxheWxpc3RNb2RhbCIsInNldFNob3dDcmVhdGVQbGF5bGlzdE1vZGFsIiwic2hvd0FkZFRvUGxheWxpc3RNb2RhbCIsInNldFNob3dBZGRUb1BsYXlsaXN0TW9kYWwiLCJzZWxlY3RlZFNvbmdGb3JQbGF5bGlzdCIsInNldFNlbGVjdGVkU29uZ0ZvclBsYXlsaXN0IiwiaGFzU2V0TGFzdFBsYXllZFNvbmciLCJzZXRIYXNTZXRMYXN0UGxheWVkU29uZyIsImxhc3RQbGF5ZWRTb25nRGlzbWlzc2VkIiwic2V0TGFzdFBsYXllZFNvbmdEaXNtaXNzZWQiLCJpc0RhcmtNb2RlIiwidG9nZ2xlVGhlbWUiLCJkaXNwbGF5Q291bnQiLCJzZXREaXNwbGF5Q291bnQiLCJpbWFnZVVybHMiLCJzZXRJbWFnZVVybHMiLCJhdWRpb1VybCIsInNldEF1ZGlvVXJsIiwiYXVkaW9SZWYiLCJjdXJyZW50VGltZSIsInNldEN1cnJlbnRUaW1lIiwiZHVyYXRpb24iLCJzZXREdXJhdGlvbiIsInZvbHVtZSIsInNldFZvbHVtZSIsImlzU2Vla2luZyIsInNldElzU2Vla2luZyIsInBlbmRpbmdTZWVrVGltZSIsInNldFBlbmRpbmdTZWVrVGltZSIsImlzRXh0ZXJuYWxseVNlZWtpbmciLCJzZXRJc0V4dGVybmFsbHlTZWVraW5nIiwicmVjb21tZW5kZWRRdWV1ZSIsInNldFJlY29tbWVuZGVkUXVldWUiLCJwbGF5ZWRTb25ncyIsInNldFBsYXllZFNvbmdzIiwiU2V0IiwicGVyc29uYWxpemVkTGlzdCIsInNldFBlcnNvbmFsaXplZExpc3QiLCJjdXJyZW50U29uZ0luZGV4Iiwic2V0Q3VycmVudFNvbmdJbmRleCIsImxpc3RlbmVkU29uZ3MiLCJzZXRMaXN0ZW5lZFNvbmdzIiwiaXNGZXRjaGluZ01vcmUiLCJzZXRJc0ZldGNoaW5nTW9yZSIsImxvYWRNb3JlU29uZ3MiLCJwcmV2IiwiZGlzcGxheWVkU29uZ3MiLCJzbGljZSIsImxvYWRBdWRpbyIsImZpbGVfaWQiLCJ1cmwiLCJjdXJyZW50IiwiYXVkaW8iLCJpc05hTiIsInBsYXkiLCJjYXRjaCIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJwYXVzZSIsImZldGNoSW1hZ2VzIiwibmV3VXJscyIsInNvbmdzVG9Mb2FkIiwic29uZyIsImlkIiwiaW1nX2lkIiwicGxheWxpc3QiLCJPYmplY3QiLCJrZXlzIiwibGVuZ3RoIiwibG9nIiwibG9hZExhc3RQbGF5ZWRJbWFnZSIsImluaXRpYWxSZWNzIiwiZmlsdGVyZWQiLCJmaWx0ZXIiLCJoYXMiLCJ0b1N0cmluZyIsIm5ld1BlcnNvbmFsaXplZExpc3QiLCJuZXdTZXQiLCJhZGQiLCJBcnJheSIsImZyb20iLCJoYW5kbGVTb25nUGxheSIsInVwZGF0ZWQiLCJuYW1lIiwicmVjcyIsInMiLCJoYW5kbGVBZGRUb1F1ZXVlIiwic3VjY2VzcyIsInRvZ2dsZVBsYXkiLCJ0b2dnbGVQbGF5ZXJTaXplIiwiY2xvc2VQbGF5ZXIiLCJoYW5kbGVUb2dnbGVMaWtlIiwic29uZ0lkIiwiaXNMaWtlZCIsImhhbmRsZVByZXZpb3VzIiwicHJldkluZGV4IiwicHJldlNvbmciLCJuZXh0U29uZyIsIm5ld1VybCIsImN1cnJlbnRJbmRleCIsImZpbmRJbmRleCIsIm5leHRJbmRleCIsImhhbmRsZUxvYWRlZE1ldGFkYXRhIiwibG9hZGVkRHVyYXRpb24iLCJpc0Zpbml0ZSIsImVyciIsInNldFRpbWVvdXQiLCJoYW5kbGVOZXh0IiwibmV4dFF1ZXVlU29uZyIsIm5ld1JlY3MiLCJzb21lIiwiZXhpc3RpbmciLCJTdHJpbmciLCJ3YXJuIiwiZm9ybWF0TnVtYmVyIiwibnVtIiwidG9GaXhlZCIsImhhbmRsZUFkZFRvUGxheWxpc3QiLCJoYW5kbGVTb25nRW5kIiwicmVuZGVyQ29udGVudCIsIm9uQmFjayIsIm9uU29uZ1BsYXkiLCJvbkFkZFRvUXVldWUiLCJvbkNyZWF0ZVBsYXlsaXN0Iiwib25EZWxldGVQbGF5bGlzdCIsIm9uUmVuYW1lUGxheWxpc3QiLCJvblJlbW92ZVNvbmdGcm9tUGxheWxpc3QiLCJvbkFkZFRvUGxheWxpc3QiLCJvbkxvYWRNb3JlIiwiaGFzTW9yZVNvbmdzIiwib25QbGF5bGlzdHNDbGljayIsIm9uTGlrZWRDbGljayIsInRoZW1lQ2xhc3NlcyIsInNldEN1cnJlbnRUaW1lU3RhdGUiLCJkaXYiLCJjbGFzc05hbWUiLCJidXR0b24iLCJvbkNsaWNrIiwic2l6ZSIsInNwYW4iLCJpbWFnZVVybCIsIm9uVG9nZ2xlUGxheSIsIm9uTWF4aW1pemUiLCJvblByZXZpb3VzIiwib25OZXh0Iiwib25DbG9zZSIsIm9uVG9nZ2xlTGlrZSIsIm9uTWluaW1pemUiLCJzZWVrVGltZSIsIm9uUmVtb3ZlRnJvbVF1ZXVlIiwiaXNPcGVuIiwicmVmIiwic3JjIiwidW5kZWZpbmVkIiwib25FbmRlZCIsIm9uVGltZVVwZGF0ZSIsIk1hdGgiLCJhYnMiLCJvbkxvYWRlZE1ldGFkYXRhIiwib25Wb2x1bWVDaGFuZ2UiLCJzdHlsZSIsImRpc3BsYXkiLCJNdXNpY1BsYXllckFwcCIsInBvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ })

});